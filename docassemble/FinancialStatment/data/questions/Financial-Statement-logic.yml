---
metadata:
  title: |
    Financial Statement
  description: |
    Finalcial Statement for MA Probate and Family Trial Court
  continue button label: Next
---
modules:
  - docassemble.base.core  
---
features:
  navigation: True
  progress bar: True
  question back button: True
  navigation back button: False
  css: financialStmt-styles.css
  bootstrap theme: https://stackpath.bootstrapcdn.com/bootswatch/4.4.1/cerulean/bootstrap.min.css
---
include:  
  - FS-personal.yml  
  - FS-job_income1.yml
  - FS-job_income2.yml
  - FS-job_deductions.yml
  - FS-other_income1.yml  
  - FS-other_income2.yml  
  - FS-otherIncome_deductions.yml
  - FS-expenses.yml
  - FS-assets1.yml
  - FS-assets2.yml
  - FS-debts.yml
  - FS-signature.yml
---
objects:    
  - client: Individual
  - attorney: Individual
---
initial: true
code: |
  multi_user = True
  role = 'client'
  if user_logged_in():
    if not defined('client.email'):
      client.email = user_info().email     
    if user_info().email == client.email:      
      role = 'client'
    elif user_info().email == attorney.email:	    
      role = 'attorney'
    else:
      user_kicked_out
  else:  
    user_must_log_in
  process_action()  
  
  if role == 'client':
    if returning_user(minutes=0.5):
      welcome_back
---
#--------------------------------------------------------
# Main Logic
#--------------------------------------------------------
mandatory: true
code: |      
  if role == 'client':
    # 1. Intro screen
    sees_nav_bar  
    # 2. FS-personal.yml
    employed 
    
    # 3. Job Income
    if employed: 
      # 3.1. FS-job_income1.yml
      for k in range(employer.target_number):
        employer[k].jobType # Job Type and ER Info
        if employer[k].jobType == "fullTime" or employer[k].jobType == "partTime":
          employer[k].wage # Job income details        
        # 3.2. FS-job_income2.yml
        elif employer[k].jobType == "selfEmp":
          mthReceipts
          ynSeasonal
          if ynSeasonal:
            incomeJan
            totalIncomePct  # error check       
          acctYr # Accounting basis    
          employer[k].wage = ''
        # 3.3. FS-job_deductions.yml     
        employer[k].fedTaxDed # Do it only if employed
      wklyTotalJobIncome # Do it for everyone
    
    # 4. Non-job income
    nonJobIncome # FS-other_income1.yml
    if nonJobIncome:
      annuityAmt
      if ynRentIncome:
        annRentRecived # FS-other_income2.yml     
      else: # I suppose rent income doesn't deduct in advance?
        OtherIncome_fedTaxDed #FS-otherIncome_deductions.yml
    wklyNetIncome # Do it for everyone; if no such income, set defaults
    
    # 5. Expenses
    mthlyRent # FS-expenses.yml
    estlegalFeeMax
    wklyTotalExpense
    
    # 6. Assets
    # FS-assets1.yml
    if ynHouse:
      for k in range(houses.target_number):
        houses[k].name.text
    if ynCar:
      for k in range(auto.target_number):
        auto[k].name.text
    if ynRetPlan:
      for k in range(retPlans.target_number):
        retPlans[k].name.text
    # FS-assets2.yml
    if yndeferredPlan:
      for k in range(deferredPlan.target_number): 
       deferredPlan[k].name.text
    if ynlifeInsurance:
      for k in range(lifeInsurance.target_number):
        lifeInsurance[k].name.text
    if ynSavingsPlan:
      for k in range(savingsPlan.target_number):
        savingsPlan[k].name.text
    if ynOtherAssets:
      for k in range(otherAssets.target_number):
        otherAssets[k].name.text
    assetsDone    
    
    # 7. Debts 
    if ynDebts:
      for k in range(debts.target_number):
        debts[k].name.text
      TotalDebtPmt
      
    # 8. Signatures
    client.signature
    client.signatureDate
    #client.endpoint
    if ynLawyer and not defined('attorney.signature'):   
      waiting_on_attorney      
    else:
      final_screen
  elif role == 'attorney':
    if not defined('attorney.signature'):   
      if goSign:
        attorney.signature
      else:
        pre_attorney_signature      
    else:
      final_screen
---
sections:
  - Input defaults.yml # Remove before commit
  - Introduction
  - Personal_Info
  - Income:
    - From_Jobs
    - Other_Sources
  - Expenses
  - Assets
  - Debts
  - Signature  
---
mandatory: True
code: |
  menu_items = [ action_menu_item('Roadmap', 'road_map') ]
---
event: user_kicked_out
question: |
  You are not authorized.
---
event: user_must_log_in
question: |
subquestion: |
  I am sorry, but you need to log in if you want to use this interview.
buttons:
  - Log in: signin
  - Exit: exit
---
id: Intro
comment: this is the first screen the user sees.
question: |
subquestion: |
  This guided online form is to help you fill in the short form of the **Financial Statement** for the **Massachusetts Probate and Family Court**.<br/>    
  **<span class="groupTitle">Important</span>:** Please go thru each screen carefully and slowly. Although you can go back to a prior screen to change your answers, all the earlier input on the screens after that screen will be lost.<br/><br/>
  Please gather the following information before you start, you will need them to answer questions:
  <ul>
    <li>Your social security number</li>
    <li>Your pay stubs for all your jobs if you are working</li>
    <li>All your living expense weekly/monthly bills</li>
    <li>All the paperwork for your assets - houses, cars, life insurances, stocks, etc. </li>
    <li>All your debt bills (excluding living expenses) whether you are paying or not paying</li>
  <ul>
  
field: sees_nav_bar
section: Introduction
progress: 2
---
id: Download Screen
event: final_screen
question: |
subquestion: |
  % if role == 'client':
    % if ynLawyer:
   You have successfully completed the interview. Your attorney has signed the form, now you can download it from this screen. 
    % else: 
   You have successfully completed the interview. Now you can download it from this screen. 
    % endif
  % elif role == 'attorney':
   The form is now complete with your signature. You can  download it from this screen. 
  % endif

buttons:
  - End the Interview: exit
  - Restart: restart

attachment:
  name: Signed Financial Statement Shortform for ${ client.name }
  filename: financial statement  
  docx template file: shortform.docx
---
attachment: 
  - name: signed form preview
    filename: shortform
    variable name: shortform
    docx template file: shortform.docx
---
comment: convert docx to pdf for preview
code: |      
  outputFile = pdf_concatenate(shortform, filename="preview.pdf")
---
id: Welcome Back
event: welcome_back
question: |
  Welcome back!
subquestion: |
  You are currently in the
  **${ nav.get_section(display=True) }**
  section.

  ${ nav }

  Press "Continue" to pick up
  where you left off.
buttons:
  Continue: continue
---
event: road_map
question: |
  Roadmap
subquestion: |
  You are currently in the
  **${ nav.get_section(display=True) }**
  section.

  ${ nav }

  Press "Continue" to resume the
  interview.
buttons:
  Continue: continue
---
interview help:
  label: More info
  heading: More information about this web site
  content: |
    TBD.
---
auto terms:
  interview: |
    TBD - An online guided process to collect data in order to generate a form for you. 
